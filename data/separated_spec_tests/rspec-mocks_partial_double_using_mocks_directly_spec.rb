module RSpec::Mocks
  RSpec.describe "PartialDoubleUsingMocksDirectly" do
    let(:klass) do
      Class.new do
        module MethodMissing
          remove_method :method_missing rescue nil
          def method_missing(m, *a, &b)
            if m == :captured_by_method_missing
              "response generated by method missing"
            else
              super(m, *a, &b)
            end
          end
        end

        extend MethodMissing
        include MethodMissing

        def existing_method
          :original_value
        end

      end
    end

    let(:obj) { klass.new }

    it "fails when expected message is not received" 


    it "fails when message is received with incorrect args" 


    it "passes when expected message is received" 


    it "passes when message is received with correct args" 


    it "restores the original method if it existed" 


    context "with an instance method handled by method_missing" do
      it "restores the original behavior" 

    end

    context "with a class method handled by method_missing" do
      it "restores the original behavior" 

    end
  end
end

